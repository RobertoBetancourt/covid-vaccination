{"version":3,"sources":["components/utils/confirmation-dialog.component.jsx","components/landing-page/landing-page-form.component.jsx","components/landing-page/project-information.component.jsx","components/menu/menu.component.jsx","components/landing-page/landing-page.component.jsx","components/dashboard/dashboard-graph.component.jsx","components/dashboard/dashboard.component.jsx","components/sign-in/sign-in-form.component.jsx","components/sign-in/sign-up-form.component.jsx","components/sign-in/sign-in-page.component.jsx","components/select-countries/select-countries-table.component.jsx","components/select-countries/select-countries.component.jsx","components/cases-information/cases-information.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ConfirmationDialog","props","open","handleClose","title","content","button","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","Typography","variant","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","useStyles","makeStyles","theme","informationContent","lineHeight","contactContainer","marginTop","textAlign","marginBottom","form","margin","spacing","informationField","errorMessage","LandingPageForm","classes","useForm","register","errors","handleSubmit","React","useState","setOpen","handleClickOpen","informationDialog","Container","maxWidth","className","component","TextField","fullWidth","inputRef","required","name","label","InputProps","style","fontSize","type","email","data","console","log","size","informationContainer","card","numbersImage","height","graphImage","paddingLeft","paddingRight","width","tableImage","cardsContainer","display","justifyContent","numbersTitle","blackFont","ProjectInformation","Card","CardContent","alt","src","SimpleMenu","light","anchorEl","setAnchorEl","isSignedOut","setIsSignedOut","userIsSignedIn","localStorage","getItem","window","location","pathname","to","IconButton","aria-controls","aria-haspopup","event","currentTarget","grey","indigo","Menu","keepMounted","Boolean","MenuItem","length","removeItem","imageContainer","alignItems","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","fontWeight","root","menu","paddingTop","LandingPage","container","loading","MyResponsiveLine","countries","newData","i","includes","country","tempObj","tempData","tempDataObj","j","people_vaccinated","x","date","y","push","top","right","bottom","left","xScale","format","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisBottom","colors","scheme","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","DashboardGraph","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","background","circularProgress","Dashboard","setCountries","setLoading","axios","get","nameOfCountries","filter","active","map","getNameOfCountries","catch","CircularProgress","SignInForm","isSignedIn","setIsSignedIn","onSubmit","a","input","mail","password","post","token","setItem","dispatchEvent","Event","response","status","Alert","severity","SignUpForm","setSignUpSuccess","setSignIn","user","signInLabel","signInForm","backgroundColor","padding","borderRadius","SignInPage","signIn","signUpSuccess","StyledTableCell","withStyles","head","palette","common","white","body","TableCell","StyledTableRow","TableRow","table","minWidth","marginLeft","info","titleContainer","SelectCountriesTable","setCountriesUpdated","rows","onClickCountry","newState","prevState","gutterBottom","TableContainer","Paper","Table","aria-label","TableHead","align","TableBody","row","scope","disabled","SelectCountries","countriesUpdated","GET_CONTINENT_INFORMATION","gql","bullet","transform","information","pos","containerCircularProgres","continentContainer","ContinentInformation","continent","useQuery","variables","continentInformation","Europe","img","Asia","Africa","cases","todayCases","deaths","todayDeaths","updated","getContinentInformation","Date","CasesInformation","setContinent","FormControl","formControl","InputLabel","Select","labelId","value","onChange","target","FormHelperText","App","exact","path","hostname","match","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6ccb25e1.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography\n} from '@material-ui/core'\n\nconst ConfirmationDialog = (props) => {\n  const { open, handleClose, title, content, button } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          <Typography variant='h5'>{title || 'Éxito'}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {content || 'Operación realizada exitosamente.'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary' autoFocus>\n            {button || 'Entendido'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ConfirmationDialog\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { makeStyles, Button, Container, TextField, Typography } from '@material-ui/core'\nimport ConfirmationDialog from '../utils/confirmation-dialog.component'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 70,\n    textAlign: 'center',\n    marginBottom: 70\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  informationField: {\n    marginTop: 25,\n    marginBottom: 25\n  },\n  errorMessage: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}))\n\nconst LandingPageForm = () => {\n  const classes = useStyles()\n  const { register, errors, handleSubmit } = useForm()\n  const [open, setOpen] = React.useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const onSubmit = (data) => {\n    console.log(data)\n    handleClickOpen()\n  }\n\n  const informationDialog = {\n    title: 'Información registrada exitosamente',\n    content: 'Estaremos en contacto contigo para brindarte información del proyecto.',\n    button: 'Cerrar'\n  }\n\n  return (\n    <Container maxWidth='md' className={classes.contactContainer}>\n      <Typography variant='h3' component='p' className={classes.informationContent}>\n        ¿Deseas mantenerte informado? Déjanos tu información de contacto:\n      </Typography>\n      <Container maxWidth='sm'>\n        <form>\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='name'\n              id='name'\n              label={<Typography variant='h5' component='label'>Nombre</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.name && errors.name.type === 'required' && (\n                <Typography component='span'>El nombre es requerido</Typography>\n              )}\n            </div>\n          </div>\n\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='email'\n              id='email'\n              label={<Typography variant='h5' component='label'>Correo electrónico</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.email && errors.email.type === 'required' && (\n                <Typography component='span'>El correo electrónico es requerido</Typography>\n              )}\n            </div>\n          </div>\n          <Button\n            onClick={handleSubmit(onSubmit)}\n            style={{ fontSize: 22 }}\n            variant='contained'\n            size='large'\n            color='primary'\n          >\n            Enviar\n          </Button>\n        </form>\n      </Container>\n      <ConfirmationDialog\n        open={open}\n        setOpen={setOpen}\n        handleClickOpen={handleClickOpen}\n        handleClose={handleClose}\n        title={informationDialog.title}\n        content={informationDialog.content}\n        button={informationDialog.button}\n      />\n    </Container>\n  )\n}\n\nexport default LandingPageForm\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Container, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  informationContainer: {\n    marginTop: 50,\n    textAlign: 'center'\n  },\n  card: {\n    maxWidth: 345\n  },\n  numbersImage: {\n    height: 250\n\n  },\n  graphImage: {\n    paddingLeft: 17,\n    paddingRight: 17,\n    marginTop: 27,\n    width: 250\n  },\n  tableImage: {\n    height: 250\n  },\n  cardsContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 50,\n    textAlign: 'center'\n  },\n  numbersTitle: {\n    marginBottom: 5\n  },\n  blackFont: {\n    color: 'black'\n  }\n}))\n\nconst ProjectInformation = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Container maxWidth='md' className={classes.informationContainer}>\n        <Typography variant='h3' component='p' className={classes.informationContent}>\n          Este proyecto está enfocado en proveer información útil, veraz y actualizada del proceso de vacunación en diferentes países alrededor del mundo.\n        </Typography>\n      </Container>\n      <Container maxWidth='md' className={classes.informationContainer}>\n        <Typography variant='h3' component='p' className={classes.informationContent}>\n          Lo anterior será presentado por medio de:\n        </Typography>\n      </Container>\n      <Container maxWidth='md' className={classes.cardsContainer}>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={classes.blackFont} variant='h4' component='h2'>\n              Gráficas\n            </Typography>\n            <img alt='grafica' src='img/graph.png' className={classes.graphImage} />\n          </CardContent>\n        </Card>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={classes.blackFont} variant='h4' component='h2'>\n              Mapas\n            </Typography>\n            <img alt='tabla' src='img/map.png' className={classes.graphImage} />\n          </CardContent>\n        </Card>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={`${classes.blackFont} ${classes.numbersTitle}`} variant='h4' component='h2'>\n              Análisis de datos\n            </Typography>\n            <img alt='cifras' src='img/table.png' className={classes.numbersImage} />\n          </CardContent>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n\nexport default ProjectInformation\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link, Redirect } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { grey, indigo } from '@material-ui/core/colors'\n\nconst SimpleMenu = (props) => {\n  const { light } = props\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [isSignedOut, setIsSignedOut] = React.useState(false)\n  // const [isSignedIn, setIsSignedIn] = React.useState(false)\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('token')\n    setIsSignedOut(true)\n    setAnchorEl(null)\n  }\n\n  const userIsSignedIn = localStorage.getItem('token')\n\n  if (isSignedOut && window.location.pathname !== '/') {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <div>\n      <IconButton aria-controls='simple-menu' aria-haspopup='true' onClick={handleClick}>\n        <MenuIcon style={light ? { color: grey[50] } : { color: indigo[900] }} />\n      </IconButton>\n      <Menu\n        id='simple-menu'\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n\n        <Link to='/'>\n          <MenuItem onClick={handleClose}>Inicio</MenuItem>\n        </Link>\n\n        <Link to='/acerca_de'>\n          <MenuItem onClick={handleClose}>Acerca de</MenuItem>\n        </Link>\n        <Link to='/seleccionar_paises'>\n          <MenuItem onClick={handleClose}>Países en gráfica</MenuItem>\n        </Link>\n        <Link to='/informacion_casos'>\n          <MenuItem onClick={handleClose}>Información de casos</MenuItem>\n        </Link>\n        {\n          userIsSignedIn?.length > 0\n            ? <MenuItem onClick={handleLogout}>Cerrar sesión</MenuItem>\n            : <Link to='/iniciar_sesion'>\n              <MenuItem onClick={handleClose}>Iniciar sesión</MenuItem>\n              </Link>\n        }\n      </Menu>\n    </div>\n  )\n}\n\nexport default SimpleMenu\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport LandingPageForm from './landing-page-form.component'\nimport ProjectInformation from './project-information.component'\nimport SimpleMenu from '../menu/menu.component'\n\nconst useStyles = makeStyles((theme) => ({\n  imageContainer: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  },\n  backgroundImage: {\n    backgroundImage: 'url(/img/landing_page.jpg)',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 70,\n    textAlign: 'center'\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  menu: {\n    paddingTop: 50\n  }\n}))\n\nconst LandingPage = () => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <div className={classes.backgroundImage}>\n        <Container className={classes.menu}>\n          <SimpleMenu light />\n        </Container>\n        <Container className={classes.imageContainer}>\n          <Typography variant='h1' className={classes.title}>\n            Acerca del proyecto\n          </Typography>\n        </Container>\n      </div>\n      <ProjectInformation />\n      <LandingPageForm />\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport { ResponsiveLine } from '@nivo/line'\n// import { boolean } from '@storybook/addon-knobs'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 50\n  },\n  title: {\n    textAlign: 'center'\n  },\n  loading: {\n    marginTop: 50,\n    display: 'flex',\n    justifyContent: 'center'\n  }\n})\n\n// const isMainCountry = (countryToSearch) => {\n//   const mainCountries = ['Saudi Arabia', 'Brazil', 'China', 'France', 'Japan', 'South Africa', 'Australia', 'Canada', 'India', 'Italy', 'Argentina', 'Mexico', 'United Kingdom', 'United States', 'South Korea', 'Turkey']\n\n//   if (mainCountries.includes(countryToSearch)) {\n//     return true\n//   } else {\n//     return false\n//   }\n// }\n\nconst MyResponsiveLine = ({ data, countries }) => {\n  const newData = []\n\n  for (let i = 0; i < data.length; i++) {\n    if (countries.includes(data[i].country)) {\n      const tempData = []\n      let tempObj = {}\n      let tempDataObj = {}\n\n      for (let j = 0; j < data[i].data.length; j++) {\n        if (typeof data[i].data[j].people_vaccinated !== 'undefined') {\n          tempDataObj = {\n            x: data[i].data[j].date,\n            y: data[i].data[j].people_vaccinated\n          }\n\n          tempData.push(tempDataObj)\n        }\n      }\n\n      tempObj = {\n        id: data[i].country,\n        data: tempData\n      }\n\n      newData.push(tempObj)\n    }\n  }\n\n  return (\n    <div style={{ height: 600 }}>\n      <ResponsiveLine\n        data={newData}\n        margin={{ top: 20, right: 120, bottom: 100, left: 90 }}\n        xScale={{\n          type: 'time',\n          format: '%Y-%m-%d'\n        }}\n        xFormat='time:%Y-%m-%d'\n        yScale={{\n          type: 'linear',\n          min: 'auto',\n          max: 'auto',\n          stacked: false,\n          reverse: false\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'No. de personas vacunadas',\n          legendOffset: -80,\n          legendPosition: 'middle'\n        }}\n        axisBottom={{\n          format: '%b %d',\n          // tickValues: \"every 2 days\",\n          // tickRotation: -90,\n          legend: 'Fecha',\n          legendOffset: 40\n        }}\n        colors={{ scheme: 'set1' }}\n        pointSize={0}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel='y'\n        pointLabelYOffset={-12}\n        useMesh\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemBackground: 'rgba(0, 0, 0, .03)',\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nconst DashboardGraph = (props) => {\n  const { countries } = props\n  const classes = useStyles()\n  const [error, setError] = useState(null)\n  // const [loading, setLoading] = useState(false)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState([])\n\n  // The empty deps array [] means this useEffect will run once, similar to componentDidMount()\n  useEffect(() => {\n    // setLoading(true)\n    fetch('http://172.104.180.144:8000/country/all')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setItems(result.data)\n          // setLoading(false)\n          setIsLoaded(true)\n        },\n        // Note: it is important to handle errors here\n        // and not in a catch() block so that we do not\n        // intercept errors from real errors in the components.\n        (error) => {\n          setIsLoaded(true)\n          setError(error)\n        }\n      )\n  }, [])\n\n  return (\n    <Container width='md' className={classes.container}>\n      <Typography variant='h4' className={classes.title}>\n        Número de personas vacunadas por país\n      </Typography>\n      {\n        isLoaded && !error &&\n          <MyResponsiveLine data={items} countries={countries} />\n      }\n    </Container>\n  )\n}\n\nexport default DashboardGraph\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport DashboardGraph from './dashboard-graph.component'\nimport SimpleMenu from '../menu/menu.component'\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles({\n  container: {\n    // height: '100%',\n    // width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    color: '#000A77'\n  },\n  background: {\n    backgroundImage: 'url(/img/landing_page.jpg)',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  menu: {\n    paddingTop: 50\n  },\n  circularProgress: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 50\n  }\n})\n\nconst Dashboard = () => {\n  const classes = useStyles()\n  const [countries, setCountries] = React.useState([])\n  const [loading, setLoading] = React.useState(false)\n\n  const getNameOfCountries = (countries) => {\n    const activeCountries = countries.filter(country => country.active === true)\n    const nameOfCountries = activeCountries.map(country => country.name)\n    setCountries(nameOfCountries)\n    setLoading(false)\n  }\n\n  React.useEffect(() => {\n    setLoading(true)\n    const apiUrl = 'http://172.104.180.144:8000/country/'\n    axios.get(apiUrl)\n      .then(res => {\n        // console.log(res.data.contries)\n        getNameOfCountries(res.data.data)\n      }).catch(error => {\n        setLoading(false)\n        console.log(error)\n      })\n  }, [])\n\n  // console.log(countries)\n  return (\n    <div>\n      <Container className={classes.menu}>\n        <SimpleMenu />\n      </Container>\n      <Container className={classes.container}>\n        <Typography variant='h1' className={classes.title}>\n          Vacunación COVID-19\n        </Typography>\n      </Container>\n      {\n        loading\n          ? <div className={classes.circularProgress}>\n            <CircularProgress />\n            </div>\n          : <DashboardGraph countries={countries} />\n      }\n\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { makeStyles, Button, Container, TextField, Typography } from '@material-ui/core'\n// import ConfirmationDialog from '../utils/confirmation-dialog.component'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 40,\n    textAlign: 'center',\n    marginBottom: 70\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  informationField: {\n    marginTop: 25,\n    marginBottom: 25\n  },\n  errorMessage: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}))\n\nconst SignInForm = () => {\n  const classes = useStyles()\n  const { register, errors, handleSubmit } = useForm()\n  // const [open, setOpen] = React.useState(false)\n  const [isSignedIn, setIsSignedIn] = React.useState(false)\n  const [error, setError] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n\n  // const handleClickOpen = () => {\n  //   setIsSignedIn(true)\n  // }\n\n  const onSubmit = async (data) => {\n    // console.log('data', data)\n    setLoading(true)\n    const input = {\n      mail: data.email,\n      password: data.password\n    }\n\n    axios.post('http://172.104.180.144:8000/login', input)\n      .then(res => {\n        const token = res.data?.token\n        localStorage.setItem('token', token)\n        window.dispatchEvent(new Event('storage'))\n        // console.log(res)\n        // console.log(res.data)\n        setIsSignedIn(true)\n        setError('')\n      })\n      .catch(error => {\n        setLoading(false)\n        if (error.response.status === 401) {\n          setError('El correo o la contraseña son incorrectos. Intente nuevamente')\n        } else {\n          setError('Ocurrió un error inesperado. Por favor intente nuevamente.')\n        }\n      })\n  }\n\n  // const informationDialog = {\n  //   title: 'Información registrada exitosamente',\n  //   content: 'Estaremos en contacto contigo para brindarte información del proyecto.',\n  //   button: 'Cerrar'\n  // }\n\n  if (isSignedIn) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Container maxWidth='md' className={classes.contactContainer}>\n      {\n        error.length > 0 &&\n          <Alert severity='error'>{error}</Alert>\n      }\n      <Container maxWidth='sm'>\n        <form>\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='email'\n              id='email'\n              label={<Typography variant='h6' component='label'>Correo electrónico</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.email && errors.email.type === 'required' && (\n                <Typography component='span'>El correo electrónico es requerido</Typography>\n              )}\n            </div>\n          </div>\n\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='password'\n              id='password'\n              type='password'\n              label={<Typography variant='h6' component='label'>Contraseña</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.password && errors.password.type === 'required' && (\n                <Typography component='span'>La contraseña es requerida</Typography>\n              )}\n            </div>\n          </div>\n          {\n            loading\n              ? <CircularProgress />\n              : <Button\n                  onClick={handleSubmit(onSubmit)}\n                  style={{ fontSize: 20, width: '100%' }}\n                  variant='contained'\n                  size='large'\n                  color='primary'\n                >\n                Iniciar sesión\n                </Button>\n          }\n\n        </form>\n      </Container>\n      {/* <ConfirmationDialog\n        open={open}\n        setOpen={setOpen}\n        handleClickOpen={handleClickOpen}\n        handleClose={handleClose}\n        title={informationDialog.title}\n        content={informationDialog.content}\n        button={informationDialog.button}\n      /> */}\n    </Container>\n  )\n}\n\nexport default SignInForm\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { makeStyles, Button, Container, TextField, Typography } from '@material-ui/core'\n// import ConfirmationDialog from '../utils/confirmation-dialog.component'\n// import { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 40,\n    textAlign: 'center',\n    marginBottom: 70\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  informationField: {\n    marginTop: 25,\n    marginBottom: 25\n  },\n  errorMessage: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}))\n\nconst SignUpForm = (props) => {\n  const { setSignUpSuccess, setSignIn } = props\n  const classes = useStyles()\n  const { register, errors, handleSubmit } = useForm()\n  // const [open, setOpen] = React.useState(false)\n  // const [isSignedUp, setIsSignedUp] = React.useState(false)\n  const [error, setError] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n\n  // const handleClickOpen = () => {\n  //   setIsSignedIn(true)\n  // }\n\n  const onSubmit = (data) => {\n    setLoading(true)\n    const input = {\n      name: data.name,\n      mail: data.email,\n      password: data.password\n    }\n\n    axios.post('http://172.104.180.144:8000/register', input)\n      .then(res => {\n        console.log(res)\n        if (res.data?.user?.id) {\n          setError('')\n          setSignUpSuccess(true)\n          setSignIn(true)\n        }\n      })\n      .catch((error) => {\n        setLoading(false)\n        console.log(error)\n        setError('Ocurrió un error inesperado. Por favor intente nuevamente.')\n      })\n  }\n\n  // if (isSignedUp) {\n  //   return <Redirect to='/iniciar_sesion' />\n  // }\n\n  return (\n    <Container maxWidth='md' className={classes.contactContainer}>\n      {\n        error.length > 0 &&\n          <Alert severity='error'>{error}</Alert>\n      }\n      <Container maxWidth='sm'>\n        <form>\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='name'\n              id='name'\n              label={<Typography variant='h6' component='label'>Nombre</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.name && errors.name.type === 'required' && (\n                <Typography component='span'>El nombre es requerido</Typography>\n              )}\n            </div>\n          </div>\n\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='email'\n              id='email'\n              label={<Typography variant='h6' component='label'>Correo electrónico</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.email && errors.email.type === 'required' && (\n                <Typography component='span'>El correo electrónico es requerido</Typography>\n              )}\n            </div>\n          </div>\n\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='password'\n              id='password'\n              type='password'\n              label={<Typography variant='h6' component='label'>Contraseña</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.password && errors.password.type === 'required' && (\n                <Typography component='span'>La contraseña es requerida</Typography>\n              )}\n            </div>\n          </div>\n          {\n            loading\n              ? <CircularProgress />\n              : <Button\n                  onClick={handleSubmit(onSubmit)}\n                  style={{ fontSize: 20, width: '100%' }}\n                  variant='contained'\n                  size='large'\n                  color='primary'\n                >\n                Regístrate\n              </Button>\n          }\n        </form>\n      </Container>\n      {/* <ConfirmationDialog\n        open={open}\n        setOpen={setOpen}\n        handleClickOpen={handleClickOpen}\n        handleClose={handleClose}\n        title={informationDialog.title}\n        content={informationDialog.content}\n        button={informationDialog.button}\n      /> */}\n    </Container>\n  )\n}\n\nexport default SignUpForm\n","import React from 'react'\n// import Container from '@material-ui/core/Container';\nimport { Button, Container, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SignInForm from './sign-in-form.component'\nimport SignUpForm from './sign-up-form.component'\nimport SimpleMenu from '../menu/menu.component'\n// import axios from 'axios'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  signInLabel: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 35\n  },\n  menu: {\n    paddingTop: 10\n  },\n  signInForm: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 20\n  },\n  backgroundImage: {\n    backgroundImage: 'url(/img/landing_page.jpg)',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n  }\n}))\n\nconst SignInPage = () => {\n  const classes = useStyles()\n\n  const [signIn, setSignIn] = React.useState(true)\n  const [signUpSuccess, setSignUpSuccess] = React.useState(false)\n\n  const onClickSignUp = () => {\n    setSignUpSuccess(false)\n    setSignIn(false)\n  }\n\n  const onClickSignIn = () => {\n    setSignIn(true)\n  }\n\n  return (\n    <>\n      <div style={{\n        backgroundColor: '#3f51b5',\n        height: '100vh'\n      }}\n      >\n        <Container className={classes.menu}>\n          <SimpleMenu light />\n        </Container>\n        <Container className={classes.signInForm} maxWidth='sm'>\n          {\n            signUpSuccess &&\n              <Alert severity='success'>¡El registro ha sido exitoso!</Alert>\n          }\n          {\n            signIn\n              ? <>\n                <Typography variant='h4' className={classes.signInLabel}>\n                  Iniciar sesión\n                </Typography>\n                <SignInForm />\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n                >\n                  <Button size='small' className={classes.button} onClick={onClickSignUp}>\n                    ¿No tienes una cuenta? Regístrate\n                  </Button>\n                </div>\n                </>\n              : <>\n                <Typography variant='h4' className={classes.signInLabel}>\n                  Regístrate\n                </Typography>\n                <SignUpForm setSignUpSuccess={setSignUpSuccess} setSignIn={setSignIn} />\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n                >\n                  <Button size='small' className={classes.button} onClick={onClickSignIn}>\n                    ¿Ya tienes una cuenta? Inicia sesión\n                  </Button>\n                </div>\n                </>\n          }\n\n        </Container>\n      </div>\n    </>\n  )\n}\n\nexport default SignInPage\n","import React from 'react'\nimport { withStyles, makeStyles, Button, Typography } from '@material-ui/core'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { Alert } from '@material-ui/lab'\nimport axios from 'axios'\n// import Typography from '@material-ui/core/Typography';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    backgroundColor: '#000A77',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      // backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow)\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 50\n  },\n  table: {\n    minWidth: 700\n  },\n  circularProgress: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  info: {\n    marginBottom: 10\n  },\n  titleContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}))\n\nconst SelectCountriesTable = (props) => {\n  const { data, userIsSignedIn, setCountriesUpdated } = props\n\n  // console.log(data)\n  const classes = useStyles()\n  const rows = data || []\n\n  const onClickCountry = (id, newState) => {\n    const token = localStorage.getItem('token')\n\n    const input = {\n      active: newState,\n      token: token\n    }\n\n    console.log(input)\n\n    axios.post(`http://172.104.180.144:8000/country/${id}`, input)\n      .then(res => {\n        console.log(res)\n        setCountriesUpdated((prevState) => {\n          console.log('Actualizando paises')\n          const newState = prevState + 1\n          return newState\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  if (rows.length === 0) {\n    return (\n      <div className={classes.circularProgress}>\n        <CircularProgress />\n      </div>\n    )\n  }\n  // console.log(rows)\n  return (\n  // <Container maxWidth='md' className={classes.container}>\n    <>\n      <div className={classes.titleContainer}>\n        <Typography variant='h4' gutterBottom>\n          Países mostrados en gráfica\n        </Typography>\n      </div>\n      {\n        !userIsSignedIn &&\n          <div className={classes.info}>\n            <Alert severity='info'>\n              Inicia sesión como administrador para mostrar u ocultar países en la gráfica\n            </Alert>\n          </div>\n      }\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='customized table'>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>ID</StyledTableCell>\n              <StyledTableCell align='center'>País</StyledTableCell>\n              <StyledTableCell align='center'>Mostrar / Ocultar</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.id}>\n                <StyledTableCell component='th' scope='row'>\n                  {row.id}\n                </StyledTableCell>\n                <StyledTableCell align='center'>{row.name}</StyledTableCell>\n                <StyledTableCell align='center'>\n                  {\n                      row.active === true\n                        ? <Button\n                            color='secondary'\n                            onClick={() => onClickCountry(row.id, !row.active)}\n                            disabled={!userIsSignedIn}\n                            variant='outlined'\n                          >\n                          Ocultar\n                        </Button>\n                        : <Button\n                            color='primary'\n                            onClick={() => onClickCountry(row.id, !row.active)}\n                            disabled={!userIsSignedIn}\n                            variant='outlined'\n                          >\n                          Mostrar\n                        </Button>\n                  }\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  // </Container>\n  )\n}\n\nexport default SelectCountriesTable\n","import React from 'react'\nimport SelectCountriesTable from './select-countries-table.component'\nimport SimpleMenu from '../menu/menu.component'\nimport { makeStyles, Container } from '@material-ui/core'\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 5\n  },\n  menu: {\n    paddingTop: 50\n  }\n}))\n\nconst SelectCountries = () => {\n  const classes = useStyles()\n  const [countries, setCountries] = React.useState([])\n  const [countriesUpdated, setCountriesUpdated] = React.useState(0)\n  const userIsSignedIn = localStorage.getItem('token')\n\n  React.useEffect(() => {\n    const apiUrl = 'http://172.104.180.144:8000/country/'\n    axios.get(apiUrl)\n      .then(res => {\n        console.log(res)\n        setCountries(res.data.data)\n      }).catch(error => {\n        console.log(error)\n      })\n  }, [])\n\n  React.useEffect(() => {\n    console.log('Llamando a localhost:8000/country/')\n    const apiUrl = 'http://172.104.180.144:8000/country/'\n    axios.get(apiUrl)\n      .then(res => {\n        console.log(' localhost:8000/country/ res:')\n        console.log(res)\n        setCountries(res.data.data)\n      }).catch(error => {\n        console.log(error)\n      })\n  }, [countriesUpdated])\n\n  return (\n    <>\n      <Container className={classes.menu}>\n        <SimpleMenu />\n      </Container>\n      <Container maxWidth='md' className={classes.container}>\n        <SelectCountriesTable\n          data={countries}\n          userIsSignedIn={userIsSignedIn}\n          setCountriesUpdated={setCountriesUpdated}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default SelectCountries\n","import React from 'react'\nimport {\n  Card,\n  CardContent,\n  CircularProgress,\n  Container,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography\n} from '@material-ui/core'\nimport SimpleMenu from '../menu/menu.component'\nimport { gql, useQuery } from '@apollo/client'\nimport { format } from 'date-fns'\n\nconst GET_CONTINENT_INFORMATION = gql`\n  query GetContinentInformation($continent: String!) {\n    getContinentInformation(continent: $continent) {\n      cases\n      todayCases\n      deaths\n      todayDeaths\n      updated\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 5\n  },\n  menu: {\n    paddingTop: 50\n  },\n  root: {\n    minWidth: 275,\n    marginTop: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginTop: 20\n  },\n  information: {\n    fontSize: 20,\n    paddingLeft: 20,\n    marginTop: 15\n  },\n  pos: {\n    marginBottom: 12\n  },\n  containerCircularProgres: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 30\n  },\n  continentContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  graphImage: {\n    marginTop: 20,\n    width: 800\n  }\n}))\n\nconst ContinentInformation = (props) => {\n  const { continent } = props\n  const classes = useStyles()\n\n  const { loading, error, data } = useQuery(GET_CONTINENT_INFORMATION, {\n    variables: { continent }\n  })\n\n  const continentInformation = {\n    Europe: {\n      name: 'Europa',\n      img: 'Europe.png'\n    },\n    Asia: {\n      name: 'Asia',\n      img: 'Asia.png'\n    },\n    Africa: {\n      name: 'África',\n      img: 'Africa.png'\n    },\n    'North America': {\n      name: 'América del Norte',\n      img: 'NorthAmerica.png'\n    },\n    'South America': {\n      name: 'América del Sur',\n      img: 'SouthAmerica.png'\n    },\n    'Australia-Oceania': {\n      name: 'Oceanía',\n      img: 'Oceania.png'\n    }\n  }\n\n  const information = {\n    cases: '',\n    todayCases: '',\n    deaths: '',\n    todayDeaths: '',\n    updated: null\n  }\n\n  if (data) {\n    information.cases = data.getContinentInformation?.cases\n    information.todayCases = data.getContinentInformation?.todayCases\n    information.deaths = data.getContinentInformation?.deaths\n    information.updated = format(new Date(+data.getContinentInformation?.updated), 'dd/MM/yyyy')\n  }\n\n  if (loading) {\n    return (\n      <Container className={classes.containerCircularProgres}>\n        <CircularProgress />\n      </Container>\n    )\n  }\n\n  if (!data || error) {\n    return null\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <div className={classes.continentContainer}>\n          <div>\n            <Typography className={classes.title} gutterBottom>\n              {continentInformation[continent].name}\n            </Typography>\n            <Typography className={classes.information} gutterBottom>\n              Fecha de actualización: {information.updated}\n            </Typography>\n            <Typography className={classes.information} gutterBottom>\n              Total de casos: {information.cases}\n            </Typography>\n            <Typography className={classes.information} gutterBottom>\n              Casos el día de hoy: {information.todayCases}\n            </Typography>\n            <Typography className={classes.information} gutterBottom>\n              Total de personas fallecidas: {information.deaths}\n            </Typography>\n          </div>\n          <div>\n            <img alt='continente' src={`img/${continentInformation[continent].img}`} />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst CasesInformation = () => {\n  const classes = useStyles()\n\n  const [continent, setContinent] = React.useState('')\n\n  const handleChange = (event) => {\n    setContinent(event.target.value)\n  }\n\n  return (\n    <>\n      <Container className={classes.menu}>\n        <SimpleMenu />\n      </Container>\n      <Container maxWidth='md' className={classes.container}>\n        <Typography variant='h4' gutterBottom>\n          Información de casos por continente\n        </Typography>\n        <FormControl className={classes.formControl}>\n          <InputLabel id='continent-label'>Continente</InputLabel>\n          <Select\n            labelId='continent-label'\n            id='continent'\n            value={continent}\n            onChange={handleChange}\n          >\n            <MenuItem value='North America'>América del Norte</MenuItem>\n            <MenuItem value='South America'>América del Sur</MenuItem>\n            <MenuItem value='Europe'>Europa</MenuItem>\n            <MenuItem value='Asia'>Asia</MenuItem>\n            <MenuItem value='Africa'>África</MenuItem>\n            <MenuItem value='Australia-Oceania'>Oceanía</MenuItem>\n          </Select>\n          <FormHelperText>Selecciona el continente que desees para visualizar información</FormHelperText>\n        </FormControl>\n        {\n          continent &&\n            <ContinentInformation continent={continent} />\n\n        }\n        {\n          !continent &&\n            <div>\n              <img alt='continents' src='img/Continents.png' className={classes.graphImage} />\n            </div>\n\n        }\n      </Container>\n    </>\n  )\n}\n\nexport default CasesInformation\n","import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n// Link, Redirect\nimport LandingPage from './components/landing-page/landing-page.component'\nimport Dashboard from './components/dashboard/dashboard.component'\nimport SignInPage from './components/sign-in/sign-in-page.component'\nimport SelectCountries from './components/select-countries/select-countries.component'\nimport CasesInformation from './components/cases-information/cases-information.component'\n\nfunction App () {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/acerca_de' component={LandingPage} />\n          <Route exact path='/iniciar_sesion' component={SignInPage} />\n          <Route exact path='/seleccionar_paises' component={SelectCountries} />\n          <Route exact path='/informacion_casos' component={CasesInformation} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// 1\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client'\n\nconst httpLink = createHttpLink({\n  uri: 'http://172.104.180.144:4000/graphql'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\nserviceWorker.unregister()\n"],"sourceRoot":""}