{"version":3,"sources":["components/utils/confirmation-dialog.component.jsx","components/landing-page/landing-page-form.component.jsx","components/landing-page/project-information.component.jsx","components/menu/menu.component.jsx","components/landing-page/landing-page.component.jsx","components/dashboard/dashboard-graph.component.jsx","components/dashboard/dashboard.component.jsx","App.js","index.js"],"names":["ConfirmationDialog","props","open","handleClose","title","content","button","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","Typography","variant","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","useStyles","makeStyles","theme","informationContent","lineHeight","contactContainer","marginTop","textAlign","marginBottom","form","margin","spacing","informationField","errorMessage","LandingPageForm","classes","useForm","register","errors","handleSubmit","React","useState","setOpen","handleClickOpen","informationDialog","Container","maxWidth","className","component","TextField","fullWidth","inputRef","required","name","label","InputProps","style","fontSize","type","email","data","console","log","size","informationContainer","card","numbersImage","height","graphImage","paddingLeft","paddingRight","width","tableImage","cardsContainer","display","justifyContent","numbersTitle","blackFont","ProjectInformation","Card","CardContent","alt","src","list","fullList","Menu","light","top","left","bottom","right","state","setState","toggleDrawer","anchor","event","key","clsx","role","onKeyDown","List","map","text","index","to","ListItem","ListItemIcon","ListItemText","primary","Fragment","grey","indigo","Drawer","imageContainer","alignItems","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","fontWeight","root","menu","paddingTop","LandingPage","container","MyResponsiveLine","countryToSearch","newData","i","length","country","includes","tempObj","tempData","tempDataObj","j","people_vaccinated","x","date","y","push","xScale","format","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisBottom","colors","scheme","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","DashboardGraph","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","background","Dashboard","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c729553.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography\n} from '@material-ui/core'\n\nconst ConfirmationDialog = (props) => {\n  const { open, handleClose, title, content, button } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          <Typography variant='h5'>{title || 'Éxito'}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {content || 'Operación realizada exitosamente.'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary' autoFocus>\n            {button || 'Entendido'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ConfirmationDialog\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { makeStyles, Button, Container, TextField, Typography } from '@material-ui/core'\nimport ConfirmationDialog from '../utils/confirmation-dialog.component'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 70,\n    textAlign: 'center',\n    marginBottom: 70\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  informationField: {\n    marginTop: 25,\n    marginBottom: 25\n  },\n  errorMessage: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}))\n\nconst LandingPageForm = () => {\n  const classes = useStyles()\n  const { register, errors, handleSubmit } = useForm()\n  const [open, setOpen] = React.useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const onSubmit = (data) => {\n    console.log(data)\n    handleClickOpen()\n  }\n\n  const informationDialog = {\n    title: 'Información registrada exitosamente',\n    content: 'Estaremos en contacto contigo para brindarte información del proyecto.',\n    button: 'Cerrar'\n  }\n\n  return (\n    <Container maxWidth='md' className={classes.contactContainer}>\n      <Typography variant='h3' component='p' className={classes.informationContent}>\n        ¿Deseas mantenerte informado? Déjanos tu información de contacto:\n      </Typography>\n      <Container maxWidth='sm'>\n        <form>\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='name'\n              id='name'\n              label={<Typography variant='h5' component='label'>Nombre</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.name && errors.name.type === 'required' && (\n                <Typography component='span'>El nombre es requerido</Typography>\n              )}\n            </div>\n          </div>\n\n          <div className={classes.informationField}>\n            <TextField\n              fullWidth\n              variant='outlined'\n              inputRef={register({ required: true })}\n              name='email'\n              id='email'\n              label={<Typography variant='h5' component='label'>Correo electrónico</Typography>}\n              InputProps={{ style: { fontSize: 30 } }}\n            />\n            <div className={classes.errorMessage}>\n              {errors.email && errors.email.type === 'required' && (\n                <Typography component='span'>El correo electrónico es requerido</Typography>\n              )}\n            </div>\n          </div>\n          <Button\n            onClick={handleSubmit(onSubmit)}\n            style={{ fontSize: 22 }}\n            variant='contained'\n            size='large'\n            color='primary'\n          >\n            Enviar\n          </Button>\n        </form>\n      </Container>\n      <ConfirmationDialog\n        open={open}\n        setOpen={setOpen}\n        handleClickOpen={handleClickOpen}\n        handleClose={handleClose}\n        title={informationDialog.title}\n        content={informationDialog.content}\n        button={informationDialog.button}\n      />\n    </Container>\n  )\n}\n\nexport default LandingPageForm\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Container, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  informationContainer: {\n    marginTop: 50,\n    textAlign: 'center'\n  },\n  card: {\n    maxWidth: 345\n  },\n  numbersImage: {\n    height: 250\n\n  },\n  graphImage: {\n    paddingLeft: 17,\n    paddingRight: 17,\n    marginTop: 27,\n    width: 250\n  },\n  tableImage: {\n    height: 250\n  },\n  cardsContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 50,\n    textAlign: 'center'\n  },\n  numbersTitle: {\n    marginBottom: 5\n  },\n  blackFont: {\n    color: 'black'\n  }\n}))\n\nconst ProjectInformation = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Container maxWidth='md' className={classes.informationContainer}>\n        <Typography variant='h3' component='p' className={classes.informationContent}>\n          Este proyecto está enfocado en proveer información útil, veraz y actualizada del proceso de vacunación en diferentes países alrededor del mundo.\n        </Typography>\n      </Container>\n      <Container maxWidth='md' className={classes.informationContainer}>\n        <Typography variant='h3' component='p' className={classes.informationContent}>\n          Lo anterior será presentado por medio de:\n        </Typography>\n      </Container>\n      <Container maxWidth='md' className={classes.cardsContainer}>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={classes.blackFont} variant='h4' component='h2'>\n              Gráficas\n            </Typography>\n            <img alt='grafica' src='img/graph.png' className={classes.graphImage} />\n          </CardContent>\n        </Card>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={classes.blackFont} variant='h4' component='h2'>\n              Mapas\n            </Typography>\n            <img alt='tabla' src='img/map.png' className={classes.graphImage} />\n          </CardContent>\n        </Card>\n        <Card className={classes.card} variant='outlined'>\n          <CardContent>\n            <Typography className={`${classes.blackFont} ${classes.numbersTitle}`} variant='h4' component='h2'>\n              Análisis de datos\n            </Typography>\n            <img alt='cifras' src='img/table.png' className={classes.numbersImage} />\n          </CardContent>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n\nexport default ProjectInformation\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n// import ListItemLink from '@material-ui/core/ListItemLink'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport InfoIcon from '@material-ui/icons/Info'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link } from 'react-router-dom'\nimport { indigo, grey } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n})\n\nconst Menu = (props) => {\n  const { light } = props\n  const classes = useStyles()\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  })\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n\n    setState({ ...state, [anchor]: open })\n  }\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n      })}\n      role='presentation'\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Dashboard', 'Acerca de'].map((text, index) => (\n          <div key={index}>\n            <Link to={index === 0 ? '/' : '/acerca_de'}>\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <DashboardIcon /> : <InfoIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            </Link>\n          </div>\n        ))}\n      </List>\n    </div>\n  )\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>\n            <MenuIcon style={light ? { color: grey[50] } : { color: indigo[900] }} />\n          </Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport LandingPageForm from './landing-page-form.component'\nimport ProjectInformation from './project-information.component'\nimport Menu from '../menu/menu.component'\n\nconst useStyles = makeStyles((theme) => ({\n  imageContainer: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  },\n  backgroundImage: {\n    backgroundImage: 'url(/img/landing_page.jpg)',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  informationContent: {\n    color: 'black',\n    lineHeight: 1.3\n  },\n  contactContainer: {\n    marginTop: 70,\n    textAlign: 'center'\n  },\n  form: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  menu: {\n    paddingTop: 50\n  }\n}))\n\nconst LandingPage = () => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <div className={classes.backgroundImage}>\n        <Container className={classes.menu}>\n          <Menu light />\n        </Container>\n        <Container className={classes.imageContainer}>\n          <Typography variant='h1' className={classes.title}>\n            Acerca del proyecto\n          </Typography>\n        </Container>\n      </div>\n      <ProjectInformation />\n      <LandingPageForm />\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport { ResponsiveLine } from '@nivo/line'\n// import { boolean } from '@storybook/addon-knobs'\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 50\n  },\n  title: {\n    textAlign: 'center'\n  }\n})\n\nconst isMainCountry = (countryToSearch) => {\n  const mainCountries = ['Saudi Arabia', 'Brazil', 'China', 'France', 'Japan', 'South Africa', 'Australia', 'Canada', 'India', 'Italy', 'Argentina', 'Mexico', 'United Kingdom', 'United States', 'South Korea', 'Turkey']\n\n  if (mainCountries.includes(countryToSearch)) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst MyResponsiveLine = ({ data }) => {\n  const newData = []\n\n  for (let i = 0; i < data.length; i++) {\n    if (isMainCountry(data[i].country)) {\n      const tempData = []\n      let tempObj = {}\n      let tempDataObj = {}\n\n      for (let j = 0; j < data[i].data.length; j++) {\n        if (typeof data[i].data[j].people_vaccinated !== 'undefined') {\n          tempDataObj = {\n            x: data[i].data[j].date,\n            y: data[i].data[j].people_vaccinated\n          }\n\n          tempData.push(tempDataObj)\n        }\n      }\n\n      tempObj = {\n        id: data[i].country,\n        data: tempData\n      }\n\n      newData.push(tempObj)\n    }\n  }\n\n  return (\n    <div style={{ height: 600 }}>\n      <ResponsiveLine\n        data={newData}\n        margin={{ top: 20, right: 120, bottom: 100, left: 90 }}\n        xScale={{\n          type: 'time',\n          format: '%Y-%m-%d'\n        }}\n        xFormat='time:%Y-%m-%d'\n        yScale={{\n          type: 'linear',\n          min: 'auto',\n          max: 'auto',\n          stacked: false,\n          reverse: false\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'No. de personas vacunadas',\n          legendOffset: -80,\n          legendPosition: 'middle'\n        }}\n        axisBottom={{\n          format: '%b %d',\n          // tickValues: \"every 2 days\",\n          // tickRotation: -90,\n          legend: 'Fecha',\n          legendOffset: 40\n        }}\n        colors={{ scheme: 'set1' }}\n        pointSize={0}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel='y'\n        pointLabelYOffset={-12}\n        useMesh\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemBackground: 'rgba(0, 0, 0, .03)',\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nconst DashboardGraph = () => {\n  const classes = useStyles()\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState([])\n\n  // The empty deps array [] means this useEffect will run once, similar to componentDidMount()\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setItems(result)\n          setIsLoaded(true)\n        },\n        // Note: it is important to handle errors here\n        // and not in a catch() block so that we do not\n        // intercept errors from real errors in the components.\n        (error) => {\n          setIsLoaded(true)\n          setError(error)\n        }\n      )\n  }, [])\n\n  return (\n    <Container width='md' className={classes.container}>\n      <Typography variant='h4' className={classes.title}>\n        Número de personas vacunadas por país\n      </Typography>\n      {\n        isLoaded && !error &&\n          <MyResponsiveLine data={items} />\n      }\n    </Container>\n  )\n}\n\nexport default DashboardGraph\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Typography } from '@material-ui/core'\nimport DashboardGraph from './dashboard-graph.component'\nimport Menu from '../menu/menu.component'\n\nconst useStyles = makeStyles({\n  container: {\n    // height: '100%',\n    // width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    color: '#000A77'\n  },\n  background: {\n    backgroundImage: 'url(/img/landing_page.jpg)',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  menu: {\n    paddingTop: 50\n  }\n})\n\nconst Dashboard = () => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Container className={classes.menu}>\n        <Menu color='white' />\n      </Container>\n      <Container className={classes.container}>\n        <Typography variant='h1' className={classes.title}>\n          Vacunación COVID-19\n        </Typography>\n      </Container>\n      <DashboardGraph />\n    </div>\n  )\n}\n\nexport default Dashboard\n","import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n// Link, Redirect\nimport LandingPage from './components/landing-page/landing-page.component'\nimport Dashboard from './components/dashboard/dashboard.component'\n\nfunction App () {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/acerca_de' component={LandingPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}